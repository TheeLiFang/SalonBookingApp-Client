Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n\r\n    <string name=\"app_name\">Salon Booking App</string>\r\n    <string name=\"welcome\">Welcome,</string>\r\n    <string name=\"action_settings\">Settings</string>\r\n    <string name=\"home\">Home</string>\r\n    <string name=\"email\">Email</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"login\">LOGIN</string>\r\n    <string name=\"logout\">LOGOUT</string>\r\n    <string name=\"more\">more</string>\r\n    <string name=\"add_button\">Add</string>\r\n    <string name=\"show_pwd\">Show Password</string>\r\n    <string name=\"hide_pwd\">Hide Password</string>\r\n    <string name=\"forgot\">Forgot password?</string>\r\n    <string name=\"confirmation_logout\">Are you sure to logout?</string>\r\n    <string name=\"closeButton\">Close Button for Activity</string>\r\n    <string name=\"newUser\">Not a Member yet? Sign Up here.</string>\r\n    <string name=\"fullName\">Full Name</string>\r\n    <string name=\"mobileNumber\">Mobile Number</string>\r\n    <string name=\"address\">Address</string>\r\n    <string name=\"confirmPassword\">Confirm Password</string>\r\n    <string name=\"terms_conditions\">By clicking SignUp you agree all the Terms and Conditions.</string>\r\n    <string name=\"signUp\">SIGN UP</string>\r\n    <string name=\"already_user\">Already have Account? Login here.</string>\r\n    <string name=\"registered_emailID\">Please enter your Registered Email Id below:</string>\r\n    <string name=\"salonLogin\">Are you a salon owner? Login here.</string>\r\n    <string name=\"submit\">SUBMIT</string>\r\n    <string name=\"back\">BACK</string>\r\n    <string name=\"colon\">:</string>\r\n    <string name=\"delimiter\">;</string>\r\n    <string name=\"newline\">\\n</string>\r\n    <string name=\"confirmation\">Confirmation</string>\r\n    <string name=\"all_fields_are_required\">All fields are required</string>\r\n    <string name=\"error_invalid_enter_credentials\">Enter both credentials</string>\r\n    <string name=\"error_invalid_email_format\">Invalid email</string>\r\n    <string name=\"error_invalid_login\">Invalid email and/or password</string>\r\n    <string name=\"error_no_network\">No internet connection now, please try again</string>\r\n\r\n    <string name=\"submission_success\">Submission successfully</string>\r\n    <string name=\"submission_fail\">Submission failed</string>\r\n\r\n    <string name=\"salonEmail\">Company Email Id</string>\r\n\r\n    <string name=\"appointments\">Appointments</string>\r\n    <string name=\"appointment_history\">History</string>\r\n    <string name=\"transaction_history\">Transaction</string>\r\n    <string name=\"profile\">Profile</string>\r\n\r\n    <string name=\"upcoming_booking\">Upcoming Booking</string>\r\n\r\n    <!-- Forget Password -->\r\n    <string name=\"success_send_forget_password_email\">Reset password has been sent to the email</string>\r\n    <string name=\"enter_email_id\">Please enter your Email Id.</string>\r\n    <string name=\"email_id_invalid\">Your Email Id is Invalid.</string>\r\n    <string name=\"email_id_not_registered\">Your Email Id is not registered.</string>\r\n\r\n    <!-- SignIn -->\r\n    <string name=\"success_add_new_company\">Registration has been done successfully</string>\r\n    <string name=\"error_add_new_company\">Registration failed</string>\r\n    <string name=\"email_id_registered\">Your Email Id has been registered.</string>\r\n\r\n    <!-- SignUp -->\r\n    <string name=\"password_not_match\">Both password does not match</string>\r\n\r\n    <!-- Company -->\r\n    <string name=\"working_hour\">Working Hour</string>\r\n    <string name=\"monday\">Monday</string>\r\n    <string name=\"tuesday\">Tuesday</string>\r\n    <string name=\"wednesday\">Wednesday</string>\r\n    <string name=\"thursday\">Thursday</string>\r\n    <string name=\"friday\">Friday</string>\r\n    <string name=\"saturday\">Saturday</string>\r\n    <string name=\"sunday\">Sunday</string>\r\n    <string name=\"start_time\">Start Time</string>\r\n    <string name=\"end_time\">End Time</string>\r\n    <string name=\"invalid_start_end_time\">End time must be later than start time</string>\r\n    <string name=\"tooltip_working_hour_update\">Update Working Hour</string>\r\n    <string name=\"tooltip_working_hour_back\">Back to Setting Page</string>\r\n    <string name=\"confirmation_update_working_hour\">Are you sure to update this working hour?</string>\r\n\r\n    <!-- Booking -->\r\n    <string name=\"newBooking\">New Booking</string>\r\n\r\n    <!-- Payment -->\r\n    <string name=\"payment\">Payment</string>\r\n    <string name=\"client\">Client</string>\r\n    <string name=\"booking\">Booking</string>\r\n    <string name=\"booking_id\">Booking ID</string>\r\n    <string name=\"subTotal\">Subtotal</string>\r\n    <string name=\"service_list\">List of services:</string>\r\n    <string name=\"tooltip_payment_pay\">Pay</string>\r\n    <string name=\"confirmation_submit_payment\">Are you sure to confirm the payment for this client?</string>\r\n    <string name=\"payment_success\">Your payment has been made successfully.</string>\r\n    <string name=\"thank_you_for_visit\">Thank you for visiting our shop.</string>\r\n\r\n    <!-- Client -->\r\n    <string name=\"clients\">Clients</string>\r\n    <string name=\"addNewClient\">Add New Client</string>\r\n    <string name=\"editClient\">Edit Client</string>\r\n    <string name=\"updateClient\">Update Client</string>\r\n    <string name=\"client_id\">Client ID</string>\r\n    <string name=\"client_name\">Name</string>\r\n    <string name=\"client_email\">Email</string>\r\n    <string name=\"client_phone\">Phone</string>\r\n    <string name=\"client_allergic_remark\">Allergic Remark</string>\r\n    <string name=\"client_remark\">Remark</string>\r\n    <string name=\"tooltip_client_add\">Add New Client</string>\r\n    <string name=\"tooltip_client_update\">Update Client</string>\r\n    <string name=\"tooltip_client_back\">Back to Client Page</string>\r\n    <string name=\"confirmation_add_new_client\">Are you sure to add new this client?</string>\r\n    <string name=\"confirmation_update_client\">Are you sure to update this client?</string>\r\n    <string name=\"success_add_new_client\">New client has been added successfully</string>\r\n    <string name=\"success_update_client\">Client has been updated successfully</string>\r\n    <string name=\"error_add_new_client\">Failed to add new client, please try again</string>\r\n    <string name=\"error_update_client\">Failed to update client, please try again</string>\r\n\r\n    <!-- Staff -->\r\n    <string name=\"staffs\">Staffs</string>\r\n    <string name=\"addNewStaff\">Add New Staff</string>\r\n    <string name=\"editStaff\">Edit Staff</string>\r\n    <string name=\"updateStaff\">Update Staff</string>\r\n    <string name=\"deleteStaff\">Delete Staff</string>\r\n    <string name=\"staff\">Staff</string>\r\n    <string name=\"staff_id\">Staff ID</string>\r\n    <string name=\"staff_name\">Name</string>\r\n    <string name=\"staff_email\">Email</string>\r\n    <string name=\"staff_phone\">Phone</string>\r\n    <string name=\"company_id\">Company ID</string>\r\n    <string name=\"company_name\">Company</string>\r\n    <string name=\"tooltip_staff_add\">Add New Staff</string>\r\n    <string name=\"tooltip_staff_update\">Update Staff</string>\r\n    <string name=\"tooltip_staff_delete\">Delete Staff</string>\r\n    <string name=\"tooltip_staff_back\">Back to Staff Page</string>\r\n    <string name=\"confirmation_add_new_staff\">Are you sure to add this new staff?</string>\r\n    <string name=\"confirmation_update_staff\">Are you sure to update this staff?</string>\r\n    <string name=\"confirmation_delete_staff\">Are you sure to delete this staff?</string>\r\n    <string name=\"success_add_new_staff\">New staff has been added successfully</string>\r\n    <string name=\"success_update_staff\">Staff has been updated successfully</string>\r\n    <string name=\"success_delete_staff\">Staff has been deleted successfully</string>\r\n    <string name=\"error_invalid_email\">Your Email Id is invalid</string>\r\n    <string name=\"error_add_new_staff\">Failed to add new staff, please try again</string>\r\n    <string name=\"error_update_staff\">Failed to update staff, please try again</string>\r\n    <string name=\"error_delete_staff\">Failed to delete staff, please try again</string>\r\n\r\n    <!-- Service -->\r\n    <string name=\"services\">Services</string>\r\n    <string name=\"addNewService\">Add New Service</string>\r\n    <string name=\"editService\">Edit Service</string>\r\n    <string name=\"updateService\">Update Service</string>\r\n    <string name=\"deleteService\">Delete Service</string>\r\n    <string name=\"service\">Service</string>\r\n    <string name=\"setting\">Setting</string>\r\n    <string name=\"service_id\">Service ID</string>\r\n    <string name=\"service_name\">Name</string>\r\n    <string name=\"service_price\">Price</string>\r\n    <string name=\"service_price_currency\">RM</string>\r\n    <string name=\"service_duration\">Duration</string>\r\n    <string name=\"service_duration_minutes\">minutes</string>\r\n    <string name=\"service_duration_minutes_short_form\">mins</string>\r\n    <string name=\"category_id\">Category ID</string>\r\n    <string name=\"category_name\">Category</string>\r\n    <string name=\"tooltip_service_add\">Add New Service</string>\r\n    <string name=\"tooltip_service_update\">Update Service</string>\r\n    <string name=\"tooltip_service_delete\">Delete Service</string>\r\n    <string name=\"tooltip_service_back\">Back to Service Page</string>\r\n    <string name=\"confirmation_add_new_service\">Are you sure to add this new service?</string>\r\n    <string name=\"confirmation_update_service\">Are you sure to update this service?</string>\r\n    <string name=\"confirmation_delete_service\">Are you sure to delete this service?</string>\r\n    <string name=\"success_add_new_service\">New service has been added successfully</string>\r\n    <string name=\"success_update_service\">Service has been updated successfully</string>\r\n    <string name=\"success_delete_service\">Service has been deleted successfully</string>\r\n    <string name=\"error_add_new_service\">Failed to add new service, please try again</string>\r\n    <string name=\"error_update_service\">Failed to update service, please try again</string>\r\n    <string name=\"error_delete_service\">Failed to delete service, please try again</string>\r\n\r\n    <!-- Booking -->\r\n    <string name=\"addNewBooking\">Add New Booking</string>\r\n    <string name=\"reviewBooking\">Review Booking</string>\r\n    <string name=\"deleteBooking\">Delete Booking</string>\r\n    <string name=\"booking_time\">Time</string>\r\n    <string name=\"booking_company\">Company</string>\r\n    <string name=\"booking_staff\">Staff</string>\r\n    <string name=\"booking_staff_name\">Staff Name</string>\r\n    <string name=\"booking_staff_not_available\">The selected staff is no available at</string>\r\n    <string name=\"booking_client\">Client</string>\r\n    <string name=\"booking_company_name\">Company</string>\r\n    <string name=\"invalid_booking_time\">Booking must be later than current date/time</string>\r\n    <string name=\"tooltip_booking_add\">Add New Booking</string>\r\n    <string name=\"tooltip_booking_delete\">Delete Booking</string>\r\n    <string name=\"tooltip_booking_back\">Back to Booking Page</string>\r\n    <string name=\"confirmation_add_new_booking\">Are you sure to add this new booking?</string>\r\n    <string name=\"confirmation_delete_booking\">Are you sure to cancel this booking?</string>\r\n    <string name=\"success_add_new_booking\">New booking has been added successfully</string>\r\n    <string name=\"success_delete_booking\">Booking has been cancelled successfully</string>\r\n    <string name=\"error_add_new_booking\">Failed to add new booking, please try again</string>\r\n    <string name=\"error_delete_booking\">Failed to cancel booking, please try again</string>\r\n\r\n    <!-- Transaction -->\r\n    <string name=\"transaction\">Transaction</string>\r\n    <string name=\"tooltip_transaction_back\">Back to Transaction Page</string>\r\n\r\n    <!-- Setting -->\r\n    <string name=\"changePassword\">Change Password</string>\r\n    <string name=\"changeWorkingTime\">Change Working Time</string>\r\n    <string name=\"manageOwnInfo\">Manage Own Info</string>\r\n    <string name=\"tooltip_password_update\">Update Password</string>\r\n    <string name=\"tooltip_password_back\">Back to Setting Page</string>\r\n    <string name=\"tooltip_own_info_update\">Update Own Info</string>\r\n    <string name=\"tooltip_own_info_back\">Back to Setting Page</string>\r\n    <string name=\"new_password\">New Password</string>\r\n    <string name=\"current_password\">Current Password</string>\r\n    <string name=\"change_password_hint\">* Type to change new password</string>\r\n    <string name=\"confirmation_update_password\">Are you sure to update this new password?</string>\r\n    <string name=\"success_update_password\">Password has been updated successfully</string>\r\n    <string name=\"error_update_password\">Failed to update password, please try again</string>\r\n    <string name=\"confirmation_update_own_info\">Are you sure to update own info?</string>\r\n    <string name=\"success_update_workingHour\">Working hour has been updated successfully</string>\r\n    <string name=\"error_update_workingHour\">Failed to update working hour, please try again</string>\r\n    <string name=\"success_update_own_info\">Own info has been updated successfully</string>\r\n    <string name=\"error_update_own_info\">Failed to update own info, please try again</string>\r\n    <string name=\"password_not_match_database\">Current password does not correct</string>\r\n    <string name=\"new_password_not_match\">New password and confirm password does not match</string>\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision 79bea33b91555acca2b89772e6985cebd0ff9ac4)
+++ app/src/main/res/values/strings.xml	(date 1587284484912)
@@ -196,6 +196,7 @@
     <string name="success_delete_booking">Booking has been cancelled successfully</string>
     <string name="error_add_new_booking">Failed to add new booking, please try again</string>
     <string name="error_delete_booking">Failed to cancel booking, please try again</string>
+    <string name="service_list_hint">* Long press on service item to remove</string>
 
     <!-- Transaction -->
     <string name="transaction">Transaction</string>
Index: app/src/main/java/com/example/salonbookingclientapp/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.salonbookingclientapp;\r\n\r\nimport android.content.Context;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkCapabilities;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Build;\r\n\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\n\r\n/**\r\n * Java Singleton Design Pattern - Bill Pugh Singleton Implementation\r\n * https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples\r\n *\r\n * @author Pankaj\r\n * @since Mar 03, 2013\r\n */\r\npublic class Utils {\r\n    private static final Utils INSTANCE = new Utils();\r\n\r\n    // Default constructor\r\n    private Utils() {\r\n    }\r\n\r\n    public static Utils getInstance() {\r\n        return INSTANCE;\r\n    }\r\n\r\n    // Indicate insert or edit page\r\n    public enum Mode {\r\n        Insert,\r\n        Edit\r\n    }\r\n\r\n    // Indicate user is performing submit, update or delete operation\r\n    public enum Task {\r\n        SendEmail,\r\n        Submit,\r\n        Update,\r\n        Delete\r\n    }\r\n\r\n    // Server URLs\r\n    public static final String SERVER_URL = \"http://13.76.81.222/\";\r\n    public static final String SERVER_FOLDER = \"jtsalon_exc/\";\r\n\r\n    // Set connection timeout\r\n    public static int timeout_submission = 30000;\r\n\r\n    // XML Nodes\r\n    public static final String XML_NODE_ROW = \"Row\";\r\n    public static final String XML_NODE_ITEM = \"Item\";\r\n    public static final String XML_NODE_DOWNLOAD = \"Download\";\r\n    public static final String XML_NODE_STATUS = \"Status\";\r\n    public static final String XML_NODE_INSERT = \"Insert\";\r\n\r\n    // Email Validation pattern\r\n    public static final String regEx = \"\\\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,4}\\\\b\";\r\n\r\n    // Fragments Tags\r\n    public static final String Login_Fragment = \"Login_Fragment\";\r\n    public static final String SignUp_Fragment = \"SignUp_Fragment\";\r\n    public static final String ForgotPassword_Fragment = \"ForgotPassword_Fragment\";\r\n    public static final String Home_Fragment = \"Home_Fragment\";\r\n    public static final String Staff_Fragment = \"Staff_Fragment\";\r\n    public static final String StaffDetail_Fragment = \"StaffDetail_Fragment\";\r\n    public static final String Service_Fragment = \"Service_Fragment\";\r\n    public static final String ServiceDetail_Fragment = \"ServiceDetail_Fragment\";\r\n    public static final String Booking_Fragment = \"Booking_Fragment\";\r\n    public static final String BookingDetail_Fragment = \"BookingDetail_Fragment\";\r\n    public static final String Payment_Fragment = \"Payment_Fragment\";\r\n    public static final String PaymentSuccessful_Fragment = \"PaymentSuccessful_Fragment\";\r\n    public static final String Client_Fragment = \"Client_Fragment\";\r\n    public static final String ClientDetail_Fragment = \"ClientDetail_Fragment\";\r\n    public static final String TransactionHistory_Fragment = \"TransactionHistory_Fragment\";\r\n    public static final String TransactionHistoryDetail_Fragment = \"TransactionHistoryDetail_Fragment\";\r\n    public static final String More_Fragment = \"More_Fragment\";\r\n    public static final String ChangePassword_Fragment = \"ChangePassword_Fragment\";\r\n    public static final String ManageOwnInfo_Fragment = \"ManageOwnInfo_Fragment\";\r\n\r\n    // Bundle to pass data between two fragment pages\r\n    public static final String Bundle_Mode = \"mode\";\r\n    public static final String Bundle_Task = \"task\";\r\n    public static final String Bundle_Status = \"status\";\r\n    public static final String Bundle_ID = \"id\";\r\n\r\n    private static Boolean isNetworkConnected(Context context) {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        assert connectivityManager != null;\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\r\n            NetworkCapabilities capabilities = connectivityManager.getNetworkCapabilities(connectivityManager.getActiveNetwork());\r\n\r\n            if (capabilities != null) {\r\n                if (capabilities.hasTransport(NetworkCapabilities.TRANSPORT_CELLULAR)) {\r\n                    return true;\r\n                } else if (capabilities.hasTransport(NetworkCapabilities.TRANSPORT_WIFI)) {\r\n                    return true;\r\n                } else return capabilities.hasTransport(NetworkCapabilities.TRANSPORT_ETHERNET);\r\n            }\r\n        } else {\r\n            NetworkInfo network = connectivityManager.getActiveNetworkInfo();\r\n\r\n            return network != null && network.isConnected();\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public static Boolean isNetworkAvailable(Context context) {\r\n        if (isNetworkConnected(context) == Boolean.TRUE) {\r\n            try {\r\n                URL url = new URL(Utils.SERVER_URL);\r\n\r\n                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n                int timeout_network_check = 10000;\r\n                connection.setConnectTimeout(timeout_network_check);\r\n                connection.connect();\r\n\r\n                return (connection.getResponseCode() == HttpURLConnection.HTTP_OK) ? Boolean.TRUE : Boolean.FALSE;\r\n            } catch (Exception e) {\r\n                return Boolean.FALSE;\r\n            }\r\n        }\r\n\r\n        return Boolean.FALSE;\r\n    }\r\n\r\n    private <T> String writeXML(String rootElement, T obj) {\r\n        return \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\" +\r\n                \"<\" + rootElement + \">\" +\r\n                obj.toString() +\r\n                \"</\" + rootElement + \">\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/salonbookingclientapp/Utils.java	(revision 79bea33b91555acca2b89772e6985cebd0ff9ac4)
+++ app/src/main/java/com/example/salonbookingclientapp/Utils.java	(date 1587232912194)
@@ -42,8 +42,8 @@
     }
 
     // Server URLs
-    public static final String SERVER_URL = "http://13.76.81.222/";
-    public static final String SERVER_FOLDER = "jtsalon_exc/";
+    public static final String SERVER_URL = "http://192.168.1.10/";
+    public static final String SERVER_FOLDER = "iisweb/";
 
     // Set connection timeout
     public static int timeout_submission = 30000;
Index: app/src/main/res/layout/bookingdetail_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:fab=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"fill_parent\"\r\n    android:layout_height=\"fill_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"20dp\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/booking_linear_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/bookingTitle\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingLeft=\"10dp\"\r\n            android:paddingBottom=\"10dp\"\r\n            android:text=\"@string/addNewBooking\"\r\n            android:textColor=\"@color/white_greyish\"\r\n            android:textSize=\"25sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <View\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"1px\"\r\n            android:background=\"@color/white_greyish\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/frame_content\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_below=\"@id/booking_linear_layout\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/booking_input_layout_time\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"10dp\">\r\n\r\n            <EditText\r\n                android:id=\"@+id/bookingTime\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:ems=\"10\"\r\n                android:hint=\"@string/booking\" />\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/booking_input_layout_company\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:paddingLeft=\"4dp\"\r\n                android:paddingRight=\"4dp\"\r\n                android:text=\"@string/booking_company\"\r\n                android:textSize=\"12dp\" />\r\n\r\n            <FrameLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_marginTop=\"6dp\"\r\n                android:background=\"@drawable/drawable_spinner_border\">\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/spinner1\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" />\r\n            </FrameLayout>\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/booking_input_layout_staff\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:paddingLeft=\"4dp\"\r\n                android:paddingRight=\"4dp\"\r\n                android:text=\"@string/booking_staff\"\r\n                android:textSize=\"12dp\" />\r\n\r\n            <FrameLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:layout_marginTop=\"6dp\"\r\n                android:background=\"@drawable/drawable_spinner_border\">\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/spinner2\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\" />\r\n            </FrameLayout>\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/booking_input_layout_service\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:paddingLeft=\"4dp\"\r\n                android:paddingRight=\"4dp\"\r\n                android:text=\"@string/service\"\r\n                android:textSize=\"12dp\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:weightSum=\"4\">\r\n\r\n                <FrameLayout\r\n                    android:layout_width=\"300dp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"6dp\"\r\n                    android:layout_weight=\"3\"\r\n                    android:background=\"@drawable/drawable_spinner_border\">\r\n\r\n                    <Spinner\r\n                        android:id=\"@+id/spinner3\"\r\n                        android:layout_width=\"271dp\"\r\n                        android:layout_height=\"wrap_content\" />\r\n                </FrameLayout>\r\n\r\n                <Button\r\n                    android:id=\"@+id/addServiceItem\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"40dp\"\r\n                    android:layout_marginLeft=\"5dp\"\r\n                    android:layout_marginTop=\"6dp\"\r\n                    android:layout_weight=\"1\"\r\n                    android:background=\"@drawable/rectangular_button\"\r\n                    android:focusable=\"false\"\r\n                    android:text=\"@string/add_button\" />\r\n\r\n            </LinearLayout>\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <com.google.android.material.textfield.TextInputLayout\r\n            android:id=\"@+id/payment_input_layout_serviceList\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_marginTop=\"10dp\">\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:paddingLeft=\"4dp\"\r\n                android:paddingRight=\"4dp\"\r\n                android:text=\"@string/service_list\"\r\n                android:textSize=\"12dp\" />\r\n\r\n        </com.google.android.material.textfield.TextInputLayout>\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/service_frame_layout\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_marginTop=\"6dp\"\r\n            android:layout_marginBottom=\"70dp\"\r\n            android:background=\"@drawable/drawable_spinner_border\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <ScrollView\r\n                android:id=\"@+id/frame_item\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:fillViewport=\"true\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <ListView\r\n                        android:id=\"@+id/card_listView_serviceList\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"200dp\"\r\n                        android:layout_weight=\"2\"\r\n                        android:cacheColorHint=\"@android:color/transparent\"\r\n                        android:divider=\"@null\"\r\n                        android:dividerHeight=\"10dp\"\r\n                        android:listSelector=\"@android:color/transparent\" />\r\n\r\n                </LinearLayout>\r\n\r\n            </ScrollView>\r\n\r\n        </RelativeLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/booking_frame_layout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <com.getbase.floatingactionbutton.FloatingActionsMenu\r\n            android:id=\"@+id/multiple_actions_left\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"bottom|end\"\r\n            fab:fab_addButtonColorNormal=\"@color/violet\"\r\n            fab:fab_addButtonColorPressed=\"@color/violet\"\r\n            fab:fab_addButtonPlusIconColor=\"@color/white\"\r\n            fab:fab_addButtonSize=\"normal\"\r\n            fab:fab_addButtonStrokeVisible=\"false\"\r\n            fab:fab_expandDirection=\"up\"\r\n            fab:fab_labelStyle=\"@style/menu_labels_style\">\r\n\r\n            <com.getbase.floatingactionbutton.FloatingActionButton\r\n                android:id=\"@+id/addBookingBtn\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                fab:fab_colorNormal=\"@color/action_submit_green\"\r\n                fab:fab_colorPressed=\"@color/action_submit_green_pressed\"\r\n                fab:fab_icon=\"@drawable/icon_add_white_48dp\"\r\n                fab:fab_size=\"normal\"\r\n                fab:fab_title=\"@string/tooltip_booking_add\" />\r\n\r\n            <com.getbase.floatingactionbutton.FloatingActionButton\r\n                android:id=\"@+id/deleteBookingBtn\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                fab:fab_colorNormal=\"@color/action_delete_red\"\r\n                fab:fab_colorPressed=\"@color/action_delete_red_pressed\"\r\n                fab:fab_icon=\"@drawable/icon_delete_forever_white_48dp\"\r\n                fab:fab_size=\"normal\"\r\n                fab:fab_title=\"@string/tooltip_booking_delete\" />\r\n\r\n            <com.getbase.floatingactionbutton.FloatingActionButton\r\n                android:id=\"@+id/backBookingBtn\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                fab:fab_colorNormal=\"@color/action_back_blue\"\r\n                fab:fab_colorPressed=\"@color/action_back_blue_pressed\"\r\n                fab:fab_icon=\"@drawable/icon_undo_white_48dp\"\r\n                fab:fab_size=\"normal\"\r\n                fab:fab_title=\"@string/tooltip_booking_back\" />\r\n        </com.getbase.floatingactionbutton.FloatingActionsMenu>\r\n\r\n    </FrameLayout>\r\n\r\n</RelativeLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/bookingdetail_layout.xml	(revision 79bea33b91555acca2b89772e6985cebd0ff9ac4)
+++ app/src/main/res/layout/bookingdetail_layout.xml	(date 1587284774299)
@@ -167,13 +167,23 @@
             android:layout_marginTop="10dp">
 
             <TextView
-                android:layout_width="match_parent"
+                android:layout_width="wrap_content"
                 android:layout_height="match_parent"
                 android:paddingLeft="4dp"
                 android:paddingRight="4dp"
                 android:text="@string/service_list"
                 android:textSize="12dp" />
 
+            <TextView
+                android:id="@+id/service_list_hint"
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:paddingLeft="4dp"
+                android:paddingRight="4dp"
+                android:text="@string/service_list_hint"
+                android:textSize="12dp"
+                android:textStyle="italic" />
+
         </com.google.android.material.textfield.TextInputLayout>
 
         <RelativeLayout
Index: app/src/main/java/com/example/salonbookingclientapp/BookingDetail_Fragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.salonbookingclientapp;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.TimePickerDialog;\r\nimport android.content.DialogInterface;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.text.InputType;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ListView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.TimePicker;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.getbase.floatingactionbutton.FloatingActionButton;\r\n\r\nimport org.w3c.dom.Document;\r\nimport org.w3c.dom.Element;\r\nimport org.w3c.dom.NodeList;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Collections;\r\nimport java.util.Iterator;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\n\r\npublic class BookingDetail_Fragment extends Fragment implements OnClickListener {\r\n\r\n    // URLs\r\n    private static final String ASPX_SUBMIT_BOOKING = \"SubmitBooking.aspx\";\r\n    private static final String ASPX_DELETE_BOOKING = \"DeleteBooking.aspx\";\r\n    private static final String ASPX_GET_ALL_BOOKINGS = \"GetAllBookingsByClient.aspx\";\r\n    private static final String ASPX_CHECK_STAFF_BOOKING_TIME_SLOT_EXISTENCE = \"CheckStaffBookingTimeSlotExistence.aspx\";\r\n\r\n    // XML nodes for company list\r\n    private static final String XML_NODE_COMPANY_ID = \"CompanyID\";\r\n\r\n    // XML nodes for service list\r\n    private static final String XML_NODE_SERVICE_NAME = \"ServiceName\";\r\n    private static final String XML_NODE_SERVICE_PRICE = \"ServicePrice\";\r\n    private static final String XML_NODE_SERVICE_DURATION = \"ServiceDuration\";\r\n\r\n    // XML nodes for booking list\r\n    private static final String XML_NODE_BOOKING_ID = \"BookingID\";\r\n    private static final String XML_NODE_BOOKING_DATE = \"BookingDate\";\r\n\r\n    // XML nodes for booking service list\r\n    private static final String XML_NODE_BOOKING_SERVICE_ID = \"BookingServiceID\";\r\n    private static final String XML_NODE_DISPLAY_ORDER = \"DisplayOrder\";\r\n\r\n    // XML nodes for get staff booking time slot existence\r\n    private static final String XML_NODE_STAFF_BOOKING_TIME_SLOT_REGISTERED = \"RegisteredYN\";\r\n    private static final String XML_NODE_START_TIME = \"StartTime\";\r\n    private static final String XML_NODE_END_TIME = \"EndTime\";\r\n\r\n    // Control fields\r\n    private View view;\r\n    private TextView bookingTitle;\r\n    private EditText bookingTime;\r\n    private Spinner spinner1, spinner2, spinner3;\r\n    private Button addServiceItem;\r\n    private ListView listView;\r\n    private static FloatingActionButton addBookingBtn;\r\n    private static FloatingActionButton deleteBookingBtn;\r\n    private static FloatingActionButton backBookingBtn;\r\n\r\n    // Variables\r\n    private Utils.Task task;\r\n    private Boolean status, isNetworkConnected;\r\n    private Boolean registeredYN;\r\n    private String startTime, endTime;\r\n    private int bookingId;\r\n    private ClientDbHelper clientDb;\r\n    private CompanyDbHelper companyDb;\r\n    private List<Company> companies = new ArrayList<>();\r\n    private Company company;\r\n    private StaffDbHelper db;\r\n    private ArrayList<Staff> staffs = new ArrayList<>();\r\n    private Staff staff;\r\n    private ServiceDbHelper serviceDb;\r\n    private ArrayList<Service> services = new ArrayList<>();\r\n    private Service service;\r\n    private int companyId, staffId, serviceId;\r\n    private ArrayList<Service> selectedServices = new ArrayList<>();\r\n    private SelectedServicesAdapter selectedServicesAdapter;\r\n    private ArrayList<Integer> selectedServiceId = new ArrayList<>();\r\n    private BookingDbHelper bookingDb;\r\n    private ArrayList<Booking> bookings = new ArrayList<>();\r\n    private Boolean isInsertMood = Boolean.FALSE;\r\n\r\n    SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"dd/MM/yyyy HH:mm\", Locale.getDefault());\r\n\r\n    public BookingDetail_Fragment() {\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        view = inflater.inflate(R.layout.bookingdetail_layout, container, false);\r\n\r\n        initViews();\r\n        setListeners();\r\n        refreshSpinnerData();\r\n\r\n        return view;\r\n    }\r\n\r\n    // Initialize all the views\r\n    private void initViews() {\r\n        bookingTitle = view.findViewById(R.id.bookingTitle);\r\n\r\n        bookingTime = view.findViewById(R.id.bookingTime);\r\n        // Disable input for readonly\r\n        bookingTime.setInputType(InputType.TYPE_NULL);\r\n\r\n        spinner1 = view.findViewById(R.id.spinner1);\r\n        spinner2 = view.findViewById(R.id.spinner2);\r\n        spinner3 = view.findViewById(R.id.spinner3);\r\n\r\n        listView = view.findViewById(R.id.card_listView_serviceList);\r\n        addServiceItem = view.findViewById(R.id.addServiceItem);\r\n        addBookingBtn = view.findViewById(R.id.addBookingBtn);\r\n\r\n        deleteBookingBtn = view.findViewById(R.id.deleteBookingBtn);\r\n        backBookingBtn = view.findViewById(R.id.backBookingBtn);\r\n\r\n        // Generate spinner list\r\n        companyDb = new CompanyDbHelper(getContext());\r\n        companies = companyDb.getAllCompanies();\r\n\r\n        ArrayAdapter<Company> adapter = new ArrayAdapter<>(getActivity(),\r\n                android.R.layout.simple_spinner_item, companies);\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        // Attaching data adapter to spinner\r\n        spinner1.setAdapter(adapter);\r\n\r\n        // Generate spinner list\r\n        serviceDb = new ServiceDbHelper(getContext());\r\n        services = serviceDb.getAllServices();\r\n\r\n        // Add default option to empty\r\n        services.add(new Service(0, \"- Please select a service -\"));\r\n        Collections.sort(services);\r\n\r\n        ArrayAdapter<Service> serviceAdapter = new ArrayAdapter<>(getActivity(),\r\n                android.R.layout.simple_spinner_item, services);\r\n        serviceAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        // Attaching data adapter to spinner\r\n        spinner3.setAdapter(serviceAdapter);\r\n        spinner3.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                service = (Service) parent.getSelectedItem();\r\n                serviceId = service.getServiceId();\r\n                if (serviceId != 0) {\r\n                    service = serviceDb.getServiceById(serviceId);\r\n                    selectedServices.add(service);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n            }\r\n        });\r\n\r\n        showData();\r\n    }\r\n\r\n    // Set event listeners\r\n    private void setListeners() {\r\n        addBookingBtn.setOnClickListener(this);\r\n        deleteBookingBtn.setOnClickListener(this);\r\n        backBookingBtn.setOnClickListener(this);\r\n\r\n        selectedServicesAdapter = new SelectedServicesAdapter(getActivity(), selectedServices);\r\n        listView.setAdapter(selectedServicesAdapter);\r\n        addServiceItem.setOnClickListener(new View.OnClickListener() {\r\n\r\n            public void onClick(View v) {\r\n                selectedServicesAdapter.notifyDataSetChanged();\r\n            }\r\n        });\r\n        if (isInsertMood == Boolean.TRUE) {\r\n            listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\r\n                @Override\r\n                public boolean onItemLongClick(AdapterView<?> parent, View view, final int position, long id) {\r\n                    new AlertDialog.Builder(getContext())\r\n                            .setTitle(getString(R.string.confirmation))\r\n                            .setMessage(getString(R.string.confirmation_delete_service))\r\n                            .setIcon(android.R.drawable.ic_dialog_info)\r\n                            .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {\r\n                                public void onClick(DialogInterface dialog, int whichButton) {\r\n                                    selectedServices.remove(position);\r\n                                    selectedServicesAdapter.notifyDataSetChanged();\r\n                                    Toast.makeText(getContext(), getString(R.string.success_delete_service), Toast.LENGTH_LONG)\r\n                                            .show();\r\n                                }\r\n                            })\r\n                            .setNegativeButton(android.R.string.no, null).show();\r\n\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Toggle buttons and display selected staff's data if it is edit mode\r\n    private void showData() {\r\n        Bundle bundle = this.getArguments();\r\n\r\n        if (bundle != null) {\r\n            Utils.Mode mode = (Utils.Mode) bundle.getSerializable(Utils.Bundle_Mode);\r\n\r\n            if (mode == Utils.Mode.Insert) {\r\n                isInsertMood = Boolean.TRUE;\r\n\r\n                spinner1.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n                    @Override\r\n                    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                        company = (Company) parent.getSelectedItem();\r\n                        companyId = company.getCompanyId();\r\n                        updateStaffListData();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onNothingSelected(AdapterView<?> parent) {\r\n                    }\r\n                });\r\n\r\n                bookingTime.setOnClickListener(new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View v) {\r\n                        final Calendar selectedDate = Calendar.getInstance();\r\n                        final Calendar currentDate = Calendar.getInstance();\r\n\r\n                        DatePickerDialog datePickerDialog = new DatePickerDialog(getContext(), new DatePickerDialog.OnDateSetListener() {\r\n                            @Override\r\n                            public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {\r\n                                selectedDate.set(year, monthOfYear, dayOfMonth);\r\n\r\n                                new TimePickerDialog(getContext(), new TimePickerDialog.OnTimeSetListener() {\r\n                                    @Override\r\n                                    public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\r\n                                        selectedDate.set(Calendar.HOUR_OF_DAY, hourOfDay);\r\n                                        selectedDate.set(Calendar.MINUTE, minute);\r\n\r\n                                        // Check if user selected date/time must be later than current date/time\r\n                                        if (isValidTime(currentDate, selectedDate)) {\r\n                                            bookingTime.setText(simpleDateFormat.format(selectedDate.getTime()));\r\n                                        } else {\r\n                                            bookingTime.setText(\"\");\r\n                                            new CustomToast().Show_Toast(getActivity(), view, getString(R.string.invalid_booking_time));\r\n                                        }\r\n                                    }\r\n                                }, currentDate.get(Calendar.HOUR_OF_DAY), currentDate.get(Calendar.MINUTE), true).show();\r\n                            }\r\n                        }, currentDate.get(Calendar.YEAR), currentDate.get(Calendar.MONTH), currentDate.get(Calendar.DATE));\r\n\r\n                        datePickerDialog.getDatePicker().setMinDate(System.currentTimeMillis());\r\n                        datePickerDialog.show();\r\n                    }\r\n                });\r\n                bookingTime.requestFocus();\r\n                deleteBookingBtn.setVisibility(View.GONE);\r\n            } else {\r\n                bookingTitle.setText(getString(R.string.reviewBooking));\r\n                bookingDb = new BookingDbHelper(getContext());\r\n\r\n                bookingId = bundle.getInt(Utils.Bundle_ID);\r\n\r\n                if (bookingId > 0) {\r\n                    BookingDbHelper bookingDb = new BookingDbHelper(getContext());\r\n                    Booking booking = bookingDb.getBookingByBookingId(bookingId);\r\n                    ArrayList<BookingService> bookingServices = bookingDb.getBookingServicesByBookingId(bookingId);\r\n                    booking.setBookingServices(bookingServices);\r\n\r\n                    bookingTime.setText(simpleDateFormat.format(booking.getBookingDate()));\r\n\r\n                    // Set selected client to spinner\r\n                    Company cp = new Company(booking.getCompanyId(), booking.getCompanyName());\r\n                    spinner1.setSelection(getCompanyIndex(spinner1, cp));\r\n\r\n                    // Generate spinner list\r\n                    db = new StaffDbHelper(getContext());\r\n                    staffs = db.getStaffByCompanyId(booking.getCompanyId());\r\n\r\n                    // Add default option to display all category of services\r\n                    staffs.add(new Staff(0, \"No specific\"));\r\n                    Collections.sort(staffs);\r\n\r\n                    ArrayAdapter<Staff> staffAdapter = new ArrayAdapter<>(getActivity(),\r\n                            android.R.layout.simple_spinner_item, staffs);\r\n                    staffAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    // Attaching data adapter to spinner\r\n                    spinner2.setAdapter(staffAdapter);\r\n\r\n                    // Set selected staff to spinner\r\n                    Staff st = new Staff(booking.getStaffId(), booking.getStaffName());\r\n                    spinner2.setSelection(getStaffIndex(spinner2, st));\r\n\r\n                    // Disable input for readonly\r\n                    spinner1.setEnabled(false);\r\n                    spinner2.setEnabled(false);\r\n                    spinner3.setEnabled(false);\r\n                }\r\n\r\n                addBookingBtn.setVisibility(View.GONE);\r\n            }\r\n        }\r\n    }\r\n\r\n    private int getCompanyIndex(Spinner spinner, Company cp) {\r\n        for (int i = 0; i < spinner.getCount(); i++) {\r\n            if (spinner.getItemAtPosition(i).toString().equalsIgnoreCase(cp.getCompanyName())) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    private int getStaffIndex(Spinner spinner, Staff st) {\r\n        for (int i = 0; i < spinner.getCount(); i++) {\r\n            if (spinner.getItemAtPosition(i).toString().equalsIgnoreCase(st.getStaffName())) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.addBookingBtn:\r\n                // Add booking\r\n                task = Utils.Task.Submit;\r\n\r\n                // Call checkValidation method\r\n                if (checkValidation() == Boolean.TRUE) {\r\n                    doSubmission(getString(R.string.confirmation_add_new_booking),\r\n                            Utils.Task.Submit.toString());\r\n                }\r\n                break;\r\n\r\n            case R.id.deleteBookingBtn:\r\n                // Delete booking\r\n                task = Utils.Task.Delete;\r\n\r\n                doSubmission(getString(R.string.confirmation_delete_booking),\r\n                        Utils.Task.Delete.toString());\r\n                break;\r\n\r\n            case R.id.backBookingBtn:\r\n                // Back to booking page\r\n                FragmentManager fragment = getActivity().getSupportFragmentManager();\r\n                fragment\r\n                        .beginTransaction()\r\n                        .addToBackStack(getTag())\r\n                        .setCustomAnimations(R.anim.left_enter, R.anim.right_out)\r\n                        .replace(R.id.frameContainer, new Booking_Fragment(),\r\n                                Utils.Booking_Fragment)\r\n                        .commit();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private Boolean isValidTime(Calendar currentDate, Calendar selectedDate) {\r\n        return 0 < selectedDate.compareTo(currentDate);\r\n    }\r\n\r\n    // Check validation method\r\n    private Boolean checkValidation() {\r\n        Boolean validate = Boolean.TRUE;\r\n\r\n        // Get all edit text values\r\n        String time = bookingTime.getText().toString();\r\n\r\n        // Check if all the strings are null or not\r\n        if (time.equals(\"\") || time.length() == 0\r\n                || spinner1.getSelectedItem() == null || spinner2.getSelectedItem() == null\r\n                || selectedServices.size() == 0) {\r\n            validate = Boolean.FALSE;\r\n            new CustomToast().Show_Toast(getActivity(), view, getString(R.string.all_fields_are_required));\r\n        }\r\n\r\n        return validate;\r\n    }\r\n\r\n    private void doSubmission(String message, final String taskSelection) {\r\n        new AlertDialog.Builder(getContext())\r\n                .setTitle(getString(R.string.confirmation))\r\n                .setMessage(message)\r\n                .setIcon(android.R.drawable.ic_dialog_info)\r\n                .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int whichButton) {\r\n                        new BackgroundTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR,\r\n                                taskSelection);\r\n                    }\r\n                })\r\n                .setNegativeButton(android.R.string.no, null).show();\r\n    }\r\n\r\n    private void addBooking() {\r\n        clientDb = new ClientDbHelper(getContext());\r\n\r\n        StringBuilder stringList = new StringBuilder();\r\n        Iterator<Integer> iterator = selectedServiceId.iterator();\r\n        while (iterator.hasNext()) {\r\n            stringList.append(iterator.next());\r\n            if (iterator.hasNext()) {\r\n                stringList.append(\";\");\r\n            }\r\n        }\r\n\r\n        try {\r\n            String url = String.format(\"%1$s%2$s%3$s?companyID=%4$s&clientID=%5$s&staffID=%6$s&bookingDate=%7$s&serviceList=%8$s\",\r\n                    Utils.SERVER_URL, Utils.SERVER_FOLDER, ASPX_SUBMIT_BOOKING,\r\n                    companyId,\r\n                    clientDb.getClientId(),\r\n                    staffId,\r\n                    bookingTime.getText().toString(),\r\n                    stringList.toString());\r\n\r\n            XMLParser parser = new XMLParser();\r\n            status = parser.httpParamSubmission(url);\r\n        } catch (Exception e) {\r\n            status = Boolean.FALSE;\r\n            e.printStackTrace();\r\n            Log.e(\"Error: \", e.getMessage());\r\n        }\r\n    }\r\n\r\n    private void deleteBooking() {\r\n        try {\r\n            String url = String.format(\"%1$s%2$s%3$s?id=%4$s\",\r\n                    Utils.SERVER_URL, Utils.SERVER_FOLDER, ASPX_DELETE_BOOKING,\r\n                    bookingId);\r\n\r\n            XMLParser parser = new XMLParser();\r\n            status = parser.httpParamSubmission(url);\r\n        } catch (Exception e) {\r\n            status = Boolean.FALSE;\r\n            e.printStackTrace();\r\n            Log.e(\"Error: \", Objects.requireNonNull(e.getMessage()));\r\n        }\r\n    }\r\n\r\n    // Refresh and download all the active clients and staffs from server\r\n    private void refreshSpinnerData() {\r\n        new BackgroundTask().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR);\r\n    }\r\n\r\n    // Download all the active bookings from server\r\n    private void downloadBookings() {\r\n        XMLParser parser = new XMLParser();\r\n        companyDb = new CompanyDbHelper(getContext());\r\n        String url = String.format(\"%1$s%2$s%3$s?id=%4$s\",\r\n                Utils.SERVER_URL, Utils.SERVER_FOLDER, ASPX_GET_ALL_BOOKINGS, companyDb.getCompanyId());\r\n        String xml = parser.getXmlFromUrl(url, true, null, null);\r\n\r\n        try {\r\n            Document doc = parser.getDomElement(xml);\r\n            NodeList nl = doc.getElementsByTagName(Utils.XML_NODE_DOWNLOAD);\r\n            Element e = (Element) nl.item(0);\r\n            status = Boolean.valueOf(parser.getValue(e, Utils.XML_NODE_STATUS));\r\n\r\n            if (status == Boolean.TRUE) {\r\n                NodeList nl1 = doc.getElementsByTagName(Utils.XML_NODE_ROW);\r\n                Element e1;\r\n                Booking booking;\r\n\r\n                // Looping through all item nodes <Row>\r\n                for (int i = 0; i < nl1.getLength(); i++) {\r\n                    e1 = (Element) nl1.item(i);\r\n\r\n                    booking = new Booking();\r\n\r\n                    // Adding each child node to booking object\r\n                    booking.setBookingId(Integer.parseInt(parser.getValue(e1, XML_NODE_BOOKING_ID)));\r\n                    booking.setBookingDate(simpleDateFormat.parse(parser.getValue(e1, XML_NODE_BOOKING_DATE)).getTime());\r\n                    booking.setCompanyId(Integer.parseInt(parser.getValue(e1, XML_NODE_COMPANY_ID)));\r\n\r\n                    NodeList nl2 = doc.getElementsByTagName(Utils.XML_NODE_ITEM);\r\n                    Element e2;\r\n                    ArrayList<BookingService> bookingServices = new ArrayList<>();\r\n                    BookingService bookingService;\r\n\r\n                    for (int j = 0; j < nl2.getLength(); j++) {\r\n                        e2 = (Element) nl2.item(j);\r\n\r\n                        bookingService = new BookingService();\r\n\r\n                        // Adding each child node to booking service object\r\n                        bookingService.setBookingId(Integer.parseInt(parser.getValue(e2, XML_NODE_BOOKING_ID)));\r\n                        bookingService.setBookingServiceId(Integer.parseInt(parser.getValue(e2, XML_NODE_BOOKING_SERVICE_ID)));\r\n                        bookingService.setServiceName(parser.getValue(e2, XML_NODE_SERVICE_NAME));\r\n                        bookingService.setServicePrice(Float.parseFloat(parser.getValue(e2, XML_NODE_SERVICE_PRICE)));\r\n                        bookingService.setServiceDuration(Integer.parseInt(parser.getValue(e2, XML_NODE_SERVICE_DURATION)));\r\n                        bookingService.setDisplayOrder(Integer.parseInt(parser.getValue(e2, XML_NODE_DISPLAY_ORDER)));\r\n\r\n                        if (booking.getBookingId() == bookingService.getBookingId()) {\r\n                            bookingServices.add(bookingService);\r\n                        }\r\n                    }\r\n\r\n                    booking.setBookingServices(bookingServices);\r\n\r\n                    bookings.add(booking);\r\n                }\r\n\r\n                bookingDb = new BookingDbHelper(getContext());\r\n                bookingDb.deleteAllBookings();\r\n                bookingDb.addAllBookings(bookings);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void updateStaffListData() {\r\n        if (companyId != 0) {\r\n            setStaffSpinnerData();\r\n        }\r\n    }\r\n\r\n    private void setStaffSpinnerData() {\r\n        // Generate spinner list\r\n        db = new StaffDbHelper(getContext());\r\n        staffs = db.getStaffByCompanyId(companyId);\r\n\r\n        // Add default option to display all category of services\r\n        staffs.add(new Staff(0, \"No specific\"));\r\n        //Collections.sort(ArrayList<Category> categories);\r\n        Collections.sort(staffs);\r\n\r\n        ArrayAdapter<Staff> adapter = new ArrayAdapter<>(getActivity(),\r\n                android.R.layout.simple_spinner_item, staffs);\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        // Attaching data adapter to spinner\r\n        spinner2.setAdapter(adapter);\r\n        spinner2.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                staff = (Staff) parent.getSelectedItem();\r\n                staffId = staff.getStaffId();\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n            }\r\n        });\r\n    }\r\n\r\n    private void checkStaffBookingTimeSlotExistence() {\r\n        for (Service service : selectedServices) {\r\n            selectedServiceId.add(service.getServiceId());\r\n        }\r\n\r\n        StringBuilder stringList = new StringBuilder();\r\n        Iterator<Integer> iterator = selectedServiceId.iterator();\r\n        while (iterator.hasNext()) {\r\n            stringList.append(iterator.next());\r\n            if (iterator.hasNext()) {\r\n                stringList.append(\";\");\r\n            }\r\n        }\r\n\r\n        try {\r\n            String url = String.format(\"%1$s%2$s%3$s?id=%4$s&startTime=%5$s&serviceList=%6$s\",\r\n                    Utils.SERVER_URL, Utils.SERVER_FOLDER, ASPX_CHECK_STAFF_BOOKING_TIME_SLOT_EXISTENCE,\r\n                    staffId,\r\n                    bookingTime.getText().toString(),\r\n                    stringList);\r\n\r\n            httpParamSubmission(url);\r\n        } catch (Exception e) {\r\n            status = Boolean.FALSE;\r\n            e.printStackTrace();\r\n            Log.e(\"Error: \", e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void httpParamSubmission(String url) {\r\n        try {\r\n            URL url1 = new URL(url);\r\n            String xml = \"\";\r\n\r\n            HttpURLConnection connection = (HttpURLConnection) url1.openConnection();\r\n            connection.setRequestMethod(\"GET\");\r\n            connection.setReadTimeout(Utils.timeout_submission);\r\n            connection.setConnectTimeout(Utils.timeout_submission);\r\n\r\n            if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) {\r\n                StringBuilder xmlResponse = new StringBuilder();\r\n                BufferedReader input = new BufferedReader(new InputStreamReader(connection.getInputStream()), 8192);\r\n                String strLine;\r\n\r\n                while ((strLine = input.readLine()) != null) {\r\n                    xmlResponse.append(strLine);\r\n                }\r\n\r\n                xml = xmlResponse.toString();\r\n                input.close();\r\n            }\r\n\r\n            if (xml.length() > 0) {\r\n                XMLParser parser = new XMLParser();\r\n                Document doc = parser.getDomElement(xml);\r\n                NodeList nl = doc.getElementsByTagName(Utils.XML_NODE_DOWNLOAD);\r\n                Element e = (Element) nl.item(0);\r\n\r\n                status = Boolean.valueOf(parser.getValue(e, Utils.XML_NODE_STATUS));\r\n\r\n                if (status == Boolean.TRUE) {\r\n                    NodeList nll = doc.getElementsByTagName(Utils.XML_NODE_ROW);\r\n                    Element el = (Element) nll.item(0);\r\n\r\n                    registeredYN = Boolean.parseBoolean(parser.getValue(el, XML_NODE_STAFF_BOOKING_TIME_SLOT_REGISTERED));\r\n                    startTime = parser.getValue(el, XML_NODE_START_TIME);\r\n                    endTime = parser.getValue(el, XML_NODE_END_TIME);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            Log.e(\"Error: \", e.getMessage());\r\n        }\r\n    }\r\n\r\n    class BackgroundTask extends AsyncTask<String, Integer, String> {\r\n        @Override\r\n        protected String doInBackground(String... param) {\r\n            isNetworkConnected = Utils.isNetworkAvailable(getContext());\r\n\r\n            if (isNetworkConnected == Boolean.TRUE) {\r\n                if (param.length != 0) {\r\n                    if (param[0].equals(Utils.Task.Submit.toString())) {\r\n                        checkStaffBookingTimeSlotExistence();\r\n                        if (registeredYN == Boolean.FALSE) {\r\n                            addBooking();\r\n                        }\r\n                    } else if (param[0].equals(Utils.Task.Delete.toString())) {\r\n                        deleteBooking();\r\n                    }\r\n                } else {\r\n                    downloadBookings();\r\n                }\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(String s) {\r\n            super.onPostExecute(s);\r\n\r\n            if (isNetworkConnected == Boolean.TRUE) {\r\n                if (task != null) {\r\n                    if (registeredYN == Boolean.TRUE) {\r\n                        new CustomToast().Show_Toast(getActivity(), view,\r\n                                String.format(\"%1$s %2$s - %3$s\",\r\n                                        getString(R.string.booking_staff_not_available), startTime, endTime));\r\n                    } else {\r\n                        Bundle bundle = new Bundle();\r\n                        bundle.putSerializable(Utils.Bundle_Task, task);\r\n                        bundle.putBoolean(Utils.Bundle_Status, status);\r\n\r\n                        Booking_Fragment fragment = new Booking_Fragment();\r\n                        fragment.setArguments(bundle);\r\n\r\n                        getActivity().getSupportFragmentManager()\r\n                                .beginTransaction()\r\n                                .addToBackStack(getTag())\r\n                                .setCustomAnimations(R.anim.left_enter, R.anim.right_out)\r\n                                .replace(R.id.frameContainer, fragment, Utils.Booking_Fragment)\r\n                                .commit();\r\n                    }\r\n                } else {\r\n                    if (isInsertMood == Boolean.FALSE) {\r\n                        // Display the service item list\r\n                        ArrayList<BookingService> bookingServicesList = bookingDb.getBookingServicesByBookingId(bookingId);\r\n                        SelectedBookingServicesAdapter adapter = new SelectedBookingServicesAdapter(getActivity(), bookingServicesList);\r\n                        listView.setAdapter(adapter);\r\n                    }\r\n                }\r\n            } else {\r\n                new CustomToast().Show_Toast(getActivity(), view, getString(R.string.error_no_network));\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/salonbookingclientapp/BookingDetail_Fragment.java	(revision 79bea33b91555acca2b89772e6985cebd0ff9ac4)
+++ app/src/main/java/com/example/salonbookingclientapp/BookingDetail_Fragment.java	(date 1587284839856)
@@ -76,7 +76,7 @@
 
     // Control fields
     private View view;
-    private TextView bookingTitle;
+    private TextView bookingTitle, serviceListHint;
     private EditText bookingTime;
     private Spinner spinner1, spinner2, spinner3;
     private Button addServiceItem;
@@ -129,6 +129,7 @@
     // Initialize all the views
     private void initViews() {
         bookingTitle = view.findViewById(R.id.bookingTitle);
+        serviceListHint = view.findViewById(R.id.service_list_hint);
 
         bookingTime = view.findViewById(R.id.bookingTime);
         // Disable input for readonly
@@ -323,6 +324,7 @@
                     spinner1.setEnabled(false);
                     spinner2.setEnabled(false);
                     spinner3.setEnabled(false);
+                    serviceListHint.setVisibility(View.GONE);
                 }
 
                 addBookingBtn.setVisibility(View.GONE);
